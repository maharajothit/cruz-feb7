service: SaaSServerless-TenantMgr

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline

custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or falls back to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}
  table:
    user: ${opt:usertable, self:provider.table.user}
    tenant: ${opt:tenanttable, self:provider.table.tenant}
    order: ${opt:ordertable, self:provider.table.order}
    product: ${opt:producttable, self:provider.table.product}
    entity: ${opt:entitytable, self:provider,table.entity}
  configdir:
    local: "../config/"
    dev: "./config/"
    prod: "./config/"
  region: ${self:provider.region}
  authdir: "../authMgr/"
  customauthdir: "../common/"
  orderdir: "../orderMgr/"
  productdir: "../productMgr/"
  sysregdir: "../sysReg/"
  tenantmgrdir: ""
  tenantregdir: "../tenantReg/"
  userdir: "../userMgr/"
  libsdir: "../../libs/"
  entitydir: "../entityMgr/"
  # Load our webpack config
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs8.10
  timeout: 30 #set timeout to 30 seconds
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "lambda:InvokeFunction"
        - "dynamodb:*"
      Resource: "*"
  stage: dev
  region: ${opt:region, file(../common/common.yml):${self:custom.stage}.region}
  table:
    user: ${self:custom.stage}-SaaS-user
    tenant: ${self:custom.stage}-SaaS-tenant
    order: ${self:custom.stage}-SaaS-order
    product: ${self:custom.stage}-SaaS-product
    entity: ${self:custom.stage}-SaaS-entity
  environment:
    stage: ${self:custom.stage}
    region: ${self:custom.region}

    USER_TABLE: ${self:custom.table.user}
    TENANT_TABLE: ${self:custom.table.tenant}
    ORDER_TABLE: ${self:custom.table.order}
    PRODUCT_TABLE: ${self:custom.table.product}
    ENTITY_TABLE: ${self:custom.table.entity}

    restApiId:
      'Fn::ImportValue': ${self:custom.stage}-SaaSServerlessApiRestApiId
    apiURL:
      ${file(../common/common.yml):${self:custom.stage}.apiURL, file(../common/common.yml):dev.apiURL}
    PROJECT_NAME:
      ${cf:SaaSServerless-common-${self:custom.stage}.ProjectName,'SaaSServerless'}
    serviceURL:
      ${file(../common/common.yml):${self:custom.stage}.serviceURL, file(../common/common.yml):dev.serviceURL}

    SNS_ROLE_ARN:
      'Fn::ImportValue': ${self:custom.stage}-SaaSServerlessSNSRoleArn

    NODE_CONFIG_DIR: ${self:custom.configdir.${self:custom.stage}}

  # define share ApiGateway
  apiGateway:
    restApiId:
      'Fn::ImportValue': ${self:custom.stage}-SaaSServerlessApiRestApiId
    restApiRootResourceId:
      'Fn::ImportValue': ${self:custom.stage}-SaaSServerlessApiRestApiRootResourceId

functions:
  - ${file(${self:custom.tenantmgrdir}tenantMgr-functions.yml)}
  - ${file(${self:custom.customauthdir}customAuth-functions.yml)}

resources:
  Resources:
    TenantDB:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          # - AttributeName: id_key
          #   AttributeType: "N"
          # - AttributeName: tenant_type
          #   AttributeType: S
          # - AttributeName: tenant_sdo_id
          #   AttributeType: S
          # - AttributeName: tenant_alias
          #   AttributeType: S
          # - AttributeName: tenant_name
          #   AttributeType: S
          # - AttributeName: identity_pool_Id
          #   AttributeType: S
          # - AttributeName: user_pool_Id
          #   AttributeType: S
          # - AttributeName: account_name
          #   AttributeType: S
          # - AttributeName: company_name
          #   AttributeType: S
          # - AttributeName: email
          #   AttributeType: S
          # - AttributeName: owner_name
          #   AttributeType: S
          # - AttributeName: system_admin_policy
          #   AttributeType: S
          # - AttributeName: system_admin_role
          #   AttributeType: S
          # - AttributeName: system_support_policy
          #   AttributeType: S
          # - AttributeName: system_support_role
          #   AttributeType: S
          # - AttributeName: tier
          #   AttributeType: S
          # - AttributeName: trust_role
          #   AttributeType: S
          # - AttributeName: tenant_subscription_as_of_datetime
          #   AttributeType: S
          # - AttributeName: tenant_subscription_expiration_datetime
          #   AttributeType: S
          # - AttributeName: tenant_subscription_cancelation_datetime
          #   AttributeType: S
          # - AttributeName: tenant_subscription_canceled_by_user
          #   AttributeType: S
          # - AttributeName: tenant_trial_as_of_datetime
          #   AttributeType: S
          # - AttributeName: tenant_trial_expiration_datetime
          #   AttributeType: S
          # - AttributeName: tenant_trial_cancelation_datetime
          #   AttributeType: S
          # - AttributeName: tenant_cancelation_reason
          #   AttributeType: S
          # - AttributeName: tenant_auto_renew
          #   AttributeType: S
          # - AttributeName: tenant_logo_url
          #   AttributeType: S
          # - AttributeName: tenant_photo_url
          #   AttributeType: S
          # - AttributeName: status
          #   AttributeType: S
          # - AttributeName: status_change_datetime
          #   AttributeType: S
          # - AttributeName: created_datetime
          #   AttributeType: S
          # - AttributeName: created_by_user
          #   AttributeType: S
          # - AttributeName: last_modified_datetime
          #   AttributeType: S
          # - AttributeName: last_modified_by_user
          #   AttributeType: S
          # - AttributeName: marked_for_deletion_datetime
          #   AttributeType: S
          # - AttributeName: marked_for_deletion_by_user
          #   AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: ${self:custom.table.tenant}
        GlobalSecondaryIndexes:
          - IndexName: TenantSDOIndex
            KeySchema:
              # - AttributeName: tenant_sdo_id
              #   KeyType: HASH
              - AttributeName: id
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 5
              WriteCapacityUnits: 5
          # - IndexName: TenantAliasIndex
          #   KeySchema:
          #     - AttributeName: tenant_alias
          #       KeyType: HASH
          #     # - AttributeName: id
          #     #   KeyType: RANGE
          #   Projection:
          #     ProjectionType: ALL
          #   ProvisionedThroughput:
          #     ReadCapacityUnits: 5
          #     WriteCapacityUnits: 5
          # - IndexName: TenantNameIndex
          #   KeySchema:
          #     - AttributeName: tenant_name
          #       KeyType: HASH
          #     # - AttributeName: id
          #     #   KeyType: HASH
          #   Projection:
          #     ProjectionType: ALL
          #   ProvisionedThroughput:
          #     ReadCapacityUnits: 5
          #     WriteCapacityUnits: 5
          # - IndexName: TenantIdKeyIndex
          #   KeySchema:
          #     - AttributeName: id_key
          #       KeyType: HASH
          #     # - AttributeName: id
          #     #   KeyType: HASH
            # Projection:
            #   ProjectionType: ALL
            # ProvisionedThroughput:
            #   ReadCapacityUnits: 5
            #   WriteCapacityUnits: 5
